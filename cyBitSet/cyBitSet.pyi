from typing import Iterable

class PyBitSet:
    """A simple implementation of a bitset."""

    def __init__(self, size: int, init_val: int | Iterable[int] | None = None) -> None:
        """Construct a new BitSet of size `size` from the given `init_val`."""
        ...
    def __setitem__(self, bit: int, value: int | bool) -> None: ...
    def __getitem__(self, bit: int) -> int: ...
    def __len__(self) -> int: ...
    def __contains__(self, bit: int) -> bool: ...
    @property
    def nnz(self) -> int: ...
    def elems(self) -> list[int]: ...
    def to_bin_str(self) -> str: ...
    def flip_one(self, bit: int) -> None: ...
    def flip_all(self) -> None: ...
    def __int__(self) -> int: ...
    def __index__(self) -> int: ...
    def __str__(self) -> str: ...
    def update(self, val: int | Iterable[int]) -> None: ...
